## ---Installing idevicerestore---

## First We Need to Install the dependencies

sudo apt-get install build-essential automake cmake autoconf \
libreadline6 autotools-dev libcurl4-openssl-dev \
libplist1 libplist-utils libplist-dev libplist++-dev \
libzip-dev git-core git-arch git-cvs git-svn git-email \
git-daemon-run gitk gitweb git-doc rsync curl libgnutls-dev libtool 
python-dev libreadline-dev libusb-dev libusb-1.0

## Now to get what we need from Git

git clone git://git.sukimashita.com/usbmuxd.git
cd usbmuxd
cmake ~/usbmuxd
make && sudo make install

cd ~

git clone git://git.sukimashita.com/libimobiledevice.git
cd libimobiledevice
./autogen.sh
make && sudo make install

sudo ldconfig

## Now we can compile idevicerestore

cd ~

git clone https://github.com/plnep00f/idevicerestore.git
cd idevicerestore
./autogen.sh
make && sudo make install
sudo ldconfig

## We also need ideviceactivate to activate the device

git clone http://github.com/posixninja/ideviceactivate.git
cd ideviceactivate 
make

## idevicerestore usage - may need to be run as root

idevicerestore [-d] [-u] [-c] [-v] [-h] <input.ipsw>

  -d, 		        enable communication debugging
  -u, 		        target specific device by its 40-digit device UUID
  -h, 		        prints usage information
  -c, 		        restore with a custom firmware
  -e,		          erase the device first
  -s,		          use saurik's server instead of Apple's
  -x,		          exclude NOR/Baseband update
  -v, 		        enable incremental levels of verboseness
  -i,             ecid ECID  target specific device by its hexadecimal ECID
  -p|--pwn        Put device in pwned DFU mode and exit (limera1n devices only)
  -P|--nopwn      Do not pwn before restoring custom fw (on-device fw is pwned)
  -f|--fire       Playing with fire: ignore missing nonces, signatures
  -t|--shsh       fetch TSS record and save to .shsh file, then exit
## ideviceactivate usage - may need to be run as root

./ideviceactivate [-x] [-d] [-h] [-u] [-f]

  -x		deactivate the target device
  -d		enable communication debugging
  -h		prints usage information
  -u UUID	target specific device by its 40-digit device UUID
  -f FILE	activates device with local activation record
